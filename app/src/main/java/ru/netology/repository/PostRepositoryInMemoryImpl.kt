package ru.netology.repository

import android.os.Parcel
import android.os.Parcelable
import androidx.lifecycle.LiveData
import androidx.lifecycle.MutableLiveData
import ru.netology.R
import ru.netology.dbo.Post

class PostRepositoryInMemoryImpl() : PostRepository {
   private var posts: List<Post> = listOf(
       Post(
    id = 1,
    author = "Нетология.Университет интернет-профессий",
    content = "Привет, это новая Нетология! Когда-то Нетология начиналась с интенсивов по онлайн-маркетингу. Затем понявились курсы по дизайну, разработке, аналитике и управлению. Мы растём сами и помогаем расти студентам: от новичков до уверенных профессионалов. Но самое важное остается с нами: мы верим, что в каждом уже есть сила, которая заставляет хотеть больше, целиться выше, бежать быстрее. Наша миссия - помочь встать на путь роста и начать цепочку перемен. https://netology.ru/",
    published = "21 мая в 18:36",
    likedByMe = false,
           likeCount = 25,
           shareCount = 101
    ),
    Post(
        id = 2,
        author = "Нетология.Университет интернет-профессий",
        content = "Привет, это новая Нетология! Когда-то Нетология начиналась с интенсивов по онлайн-маркетингу. Затем понявились курсы по дизайну, разработке, аналитике и управлению. Мы растём сами и помогаем расти студентам: от новичков до уверенных профессионалов. Но самое важное остается с нами: мы верим, что в каждом уже есть сила, которая заставляет хотеть больше, целиться выше, бежать быстрее. Наша миссия - помочь встать на путь роста и начать цепочку перемен. https://netology.ru/",
        published = "21 мая в 18:36",
        likedByMe = false,
        likeCount = 370,
        shareCount = 1
    ),
    Post(
        id = 3,
        author = "Нетология.Университет интернет-профессий",
        content = "Привет, это новая Нетология! Когда-то Нетология начиналась с интенсивов по онлайн-маркетингу. Затем понявились курсы по дизайну, разработке, аналитике и управлению. Мы растём сами и помогаем расти студентам: от новичков до уверенных профессионалов. Но самое важное остается с нами: мы верим, что в каждом уже есть сила, которая заставляет хотеть больше, целиться выше, бежать быстрее. Наша миссия - помочь встать на путь роста и начать цепочку перемен. https://netology.ru/",
        published = "21 мая в 18:36",
        likedByMe = false,
        likeCount = 5,
        shareCount = 1012
    ),
       Post(
           id = 4,
           author = "Нетология.Университет интернет-профессий",
           content = "Привет, это новая Нетология! Когда-то Нетология начиналась с интенсивов по онлайн-маркетингу. Затем понявились курсы по дизайну, разработке, аналитике и управлению. Мы растём сами и помогаем расти студентам: от новичков до уверенных профессионалов. Но самое важное остается с нами: мы верим, что в каждом уже есть сила, которая заставляет хотеть больше, целиться выше, бежать быстрее. Наша миссия - помочь встать на путь роста и начать цепочку перемен. https://netology.ru/",
           published = "21 мая в 18:36",
           likedByMe = false,
           likeCount = 2500,
           shareCount = 10
       ),
       Post(
           id = 5,
           author = "Нетология.Университет интернет-профессий",
           content = "Привет, это новая Нетология! Когда-то Нетология начиналась с интенсивов по онлайн-маркетингу. Затем понявились курсы по дизайну, разработке, аналитике и управлению. Мы растём сами и помогаем расти студентам: от новичков до уверенных профессионалов. Но самое важное остается с нами: мы верим, что в каждом уже есть сила, которая заставляет хотеть больше, целиться выше, бежать быстрее. Наша миссия - помочь встать на путь роста и начать цепочку перемен. https://netology.ru/",
           published = "21 мая в 18:36",
           likedByMe = false,
           likeCount = 658,
           shareCount = 25368
       )
   )

    private val data: MutableLiveData<List<Post>> = MutableLiveData(posts)

    constructor(parcel: Parcel) : this() {

    }

    override fun getAll(): LiveData<List<Post>> = data

    override fun likeById(id: Long) {
        posts = posts.map{
            if(it.id != id) it else it.copy(likedByMe = !it.likedByMe)
        }

        data.value = posts
    }

    override fun shareById(id: Long) {
        println("shared")
    }


}